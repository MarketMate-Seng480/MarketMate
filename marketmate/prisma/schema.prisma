generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String?
  password  String?
  profileImage String 
  vendorId  Int         @unique
  vendor    Vendor      @relation(fields: [vendorId], references: [id]) // A user can be a vendor
  role      String      @default("user")
  cart      Cart?       // A user can have one cart

}

model Vendor {
  id             Int            @id @default(autoincrement())
  name           String
  description    String
  email          String
  phone          String
  logo           String
  userId         Int
  user           User?          // A vendor belongs to a user
  shopTags       ShopCategory[] // A vendor can have multiple shop tags
  products       Product[]      // A vendor can have multiple products
  upcomingEvents Event[]        // A vendor can attend multiple events
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id]) // A cart belongs to a user
  total     Float
  products  Product[] // A cart can have multiple products
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  location    String
  url         String
  vendors     Vendor[]
  images      String[]
}

model Product {
  id           Int               @id @default(autoincrement())
  name         String
  description  String
  price        Float
  stock        Int
  detailImage  String[]
  featureImage String
  categories   ProductCategory[] // A product can belong to multiple categories
  isFeatured   Boolean           @default(false)
  vendorId     Int
  vendor       Vendor            @relation(fields: [vendorId], references: [id]) // A product belongs to one vendor
  carts        Cart[]            // A product can be in multiple carts
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products    Product[] // A product category can have multiple products
}

model ShopCategory {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  vendors     Vendor[] // A shop category can have multiple vendors
}
