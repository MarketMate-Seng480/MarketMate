generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String  @id @default(uuid())
  email        String  @unique
  role         String  @default("user")
  profileImage String  @default("https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png")
  vendorId     String?
  first_name   String
  last_name    String
  cartId       String?
  cart         Cart?
  vendor       Vendor?
}

model Vendor {
  id             String         @id @default(uuid())
  name           String
  description    String
  email          String
  phone          String
  logo           String
  userId         String         @unique
  products       Product[]
  user           User           @relation(fields: [userId], references: [id])
  upcomingEvents Event[]        @relation("EventToVendor")
  shopTags       ShopCategory[] @relation("ShopCategoryToVendor")
}

model Cart {
  id       String      @id @default(uuid())
  userId   String      @unique
  total    String
  user     User        @relation(fields: [userId], references: [id])
  cartItem Cart_Item[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Cart_Item {
  id         String   @id @default(uuid())
  cartId     String
  productId  String
  quantity   Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  cart       Cart     @relation(fields: [cartId], references: [id], map: "public_Cart_Item_cartId_fkey")
  product    Product  @relation(fields: [productId], references: [id], map: "public_Cart_Item_productId_fkey")
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  location    String
  url         String
  images      String[]
  vendors     Vendor[] @relation("EventToVendor")
}

model Product {
  id           String            @id @default(uuid())
  name         String
  description  String
  price        Float
  stock        Int
  vendorId     String
  detailImage  String[]
  featureImage String
  isFeatured   Boolean           @default(false)
  Cart_Item    Cart_Item[]
  vendor       Vendor            @relation(fields: [vendorId], references: [id])
  categories   ProductCategory[] @relation("ProductToProductCategory")
}

model ProductCategory {
  id          String    @id @default(uuid())
  name        String
  description String
  products    Product[] @relation("ProductToProductCategory")
}

model ShopCategory {
  id          String   @id @default(uuid())
  name        String
  description String
  vendors     Vendor[] @relation("ShopCategoryToVendor")
}
